plugins {
    id 'org.kordamp.gradle.java-project' version '0.35.0'
    id 'org.kordamp.gradle.bintray'      version '0.35.0'
}

config {
    release = (rootProject.findProperty('release') ?: false).toBoolean()

    info {
        name = 'Demo'
        vendor = 'Paul Rule'
        description = 'Demo spring-boot/react application'

        links {
            website = 'https://github.com/prule/spring-boot-react-hateoas-template'
            issueTracker = 'https://github.com/prule/spring-boot-react-hateoas-template/issues'
            scm = 'https://github.com/prule/spring-boot-react-hateoas-template.git'
        }

        people {
            person {
                id = 'paulrule'
                name = 'Paul Rule'
                roles = ['developer', 'architect']
            }
        }
    }

    licensing {
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }

    bintray {
        enabled = false
//        credentials {
//            username = project.bintrayUsername
//            password = project.bintrayApiKey
//        }
//        userOrg    = 'joecool'
//        name       = rootProject.name
//        githubRepo = 'joecool/sample'
    }

//    coverage {
//        jacoco {
//            enabled
//            mergeExecFile
//            mergeReportHtmlFile
//            mergeReportXmlFile
//            additionalSourceDirs
//            additionalClassDirs
//        }
//    }

}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    ext {
        SPRING_BOOT_VERSION = "2.2.6.RELEASE"
        LOMBOK_VERSION = "1.18.12"
        POSTGRES_DRIVER_VERSION = "42.2.5"
        QUERYDSL_VERSION = "4.2.1"
        VSCORE_VERSION = "0.0.2-SNAPSHOT"
    }
}

task copyClientResources(dependsOn: ':frontend:build', type: Copy) {
    doLast {
        println("Copying frontend resources to include in spring boot jar")

        group = 'build'
        description = 'Copy client resources into server'
        def src = "${project(':frontend').projectDir}/react-app/build"
        def dest = "${project(':backend').buildDir}/resources/main/static"
        println("Copying ${src} to ${dest}")
        copy {
            from "${project(':frontend').projectDir}/react-app/build"
            into "${project(':backend').buildDir}/resources/main/static"
        }
    }
}

//task(":server:build").mustRunAfter(copyClientResources)
project(":backend").build.mustRunAfter(copyClientResources)